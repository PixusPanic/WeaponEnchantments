using System;
using System.Collections.Generic;
using Terraria;
using Terraria.GameContent.Personalities;
using Terraria.ID;
using WeaponEnchantments.Content.NPCs;
using static Terraria.Localization.GameCulture;
using androLib.Common.Utility;

namespace WeaponEnchantments.Common.Utility {
    public enum EnchantmentStat : byte
    {
        None,
        AllForOne,
        AmmoCost,
        AttackSpeed,
        PercentArmorPenetration,
        AutoReuse,
		BonusCoins,
		BonusManaRegen,
		BuffDuration,
		CatastrophicRelease,
        Channel,
        CrateChance,
        CriticalStrikeChance,
        CriticalStrikeDamage,
        Damage,
        DamageAfterDefenses,
		DamageReduction,
		DayEventUpdateRate,
		DayTileUpdateRate,
		DayTimeRate,
		Defense,
        EnemyMaxSpawns,
        EnemySpawnRate,
		FishingEnemySpawnChance,
        FishingPower,
        GodSlayer,
        InfinitePenetration,
		ItemAttractionAndPickupSpeed,
		JumpSpeed,
		KiDamage,
		KiRegen,
        Knockback,
        LavaFishing,
        LifeRegen,
        LifeSteal,
        Luck,
		ManaUsage,
        ManaRegen,
        MaxFallSpeed,
		MaxKi,
        MaxLife,
		MaxLifeSteal,
		MaxMinions,
        MaxMP,
		Melee,
		MiningSpeed,
		MovementAcceleration,
        MovementSlowdown,
        MovementSpeed,
        Multishot,
		NightEventUpdateRate,
		NightTileUpdateRate,
		NightTimeRate,
		NPCHitCooldown,
        OneForAll,
		PickupRange,
		PrideOfTheWeak,
		ProjectileVelocity,
        QuestFishChance,
        Size,
		WingTime,
        WhipRange,
		YoyoStringLength
	}
    public static class ID_Dictionaries
    {
        public static List<EnchantmentStat> WeaponStatDict = new List<EnchantmentStat>() {
            EnchantmentStat.AttackSpeed,
            EnchantmentStat.PercentArmorPenetration,
            EnchantmentStat.AutoReuse,
            EnchantmentStat.CriticalStrikeChance,
            EnchantmentStat.Damage,
            EnchantmentStat.Knockback,
            EnchantmentStat.ManaUsage,
            EnchantmentStat.Size,
        };
    }
    public enum WeaponStat : byte
    {
        AttackSpeed = 3,
        ArmorPenetration,
        AutoReuse,
        CriticalStrikeChance = 7,
        Damage = 9,
        Knockback = 17,
        ManaUsage = 20,
        Size = 33,
    }
    public enum BuffStyle
	{
        OnTickPlayerBuff,
        OnTickPlayerDebuff,
        OnTickAreaTeamBuff,
        OnTickAreaTeamDebuff,
        OnTickEnemyBuff,
        OnTickEnemyDebuff,
        OnTickAreaEnemyBuff,
        OnTickAreaEnemyDebuff,
        OnHitPlayerBuff,
        OnHitPlayerDebuff,
        OnHitEnemyBuff,
        OnHitEnemyDebuff,
        OnHitAreaTeamBuff,
        OnHitAreaTeamDebuff,
        OnHitAreaEnemyBuff,
        OnHitAreaEnemyDebuff,
		All
    }
    public enum PermenantItemFields : short
	{
        
    }
    public enum PermenantItemProperties : short
	{
        ArmorPenetration,
        DamageType
    }
	public enum EnchantmentGeneralTooltipsID
	{
		LevelCost,
		Unique,
		Only,
		ArmorSlotOnly,
		NotAllowed,
		Max1,
		Utility,
		Or,
		OnlyAllowedOn,
		AllowedOn,
		And,
		Points,
		EnchantmentCapacity,
		LevelAvailable,
		BoosterInstalled,
		NormalBoosterAbreviation,
		UltraBoosterAbreviation,
		Experience,
		ToNextLevel,
		MaxLevel,
		InfusedArmorID,
		SetBonusID,
		NewSetBonusID,
		NewInfusedItem,
		ApproximateItemDamage,
		OutOfAmmo,
		InfusionPower,
		InfusedItem,
		NewInfusionPower,

	}
	public enum TableTextID
	{
		Yes,
		No,
		LootAll,
		Syphon,
		LevelUp,
		xp,
		Offer,
		Infusion,
		Finalize,
		Cancel,
		AreYouSure,
		ExchangeEssence,
		ExchangeOres,
		ExchangeEssenceAndOres,
		Item,
		Enchantments,
		Storage,
		weapon0,
		general1,
		general2,
		general3,
		enchantment0,
		enchantment4,
		utility0,
		essence0,
		Loadouts,
		ToggleAutoTrashOfferedItems
	}
	public enum EnchantmentStorageTextID {
		//LootAll,
		//DepositAll,
		//QuickStack,
		//Sort,
		//ToggleVacuum,
		ToggleMarkTrash = 5,
		UncraftAllTrash,
		RevertAllToBasic,
		ManageTrash,
		ManageOfferedItems,
		QuickCraft,
		//Do not place anything besides buttons before this
		EnchantmentStorage,
		//Search,
		OreBag,
		EnchantmentLoadouts,
		All,
		HeldItem,
		NoHeldItem,
		LoadoutSizeChanged,
		NotHighEnoughLevel,
		NoArmor,
		NoAccessories,
		NoItems,
		NotEnoughEnchantments,
		Add,
		Loadout,
		AddFromEquippedEnchantments,
		Delete
	}
	public enum CombineModeID {
		Normal,
		MultiplicativePartOf1
	}
	public enum GameMessageTextID {
		ItemTooLowLevel,
		SlotNumDisabledByConfig,
		RemovedUnloadedEnchantmentFromItem,
		DetectedNonEnchantmentInEnchantmentSlot,
		EnchantmentNoLongerAllowed,
		NoLongerUtilityEnchantment,
		NoLongerAllowedOnDamageType,
		NowLimitedToOne,
		MultipleUniqueEnchantments,
		CongradulationsMaxLevel,
		ItemLevelUp,
		PreventedLoosingExperience,
		FishingQuestTurnedIn,
		CannotGainAdditionalPower,
		InfusionPowerMustBeLower,
		SameSetBonusNoEffect,
		CantInfusionArmorDifferentTypes,
		InfusionOnlyPossibleSameType,
		ItemRemovedFromWeaponEnchantments,
		ItemRemovedReiceveCompensation,
		FailedReplaceWithCoins,
		ItemRemovedRecieveCoins,
		ItemRemovedRelacedWithItem,
		MainUpdateCount,
		NewItemIsAir,
		OnlySyphonMaxLevel,
		InfusionConsumeItemWasNull,
		MurasamaNoInfusion,
		FavoritedItemsCantBeConsumedForInfusion,
		ResistsYourAttemptToEmpower,
		TryInfuseFailed,
		NotEnchantableAndNotAirInfusionItem,
		AlreadyMaxLevel,
		NotEnoughEssence,
		NonEnchantableItemInTable,
		DailyFishingQuestReset,
		PreventedIssueLooseExperienceTwo,
		FailedToCloneItem,
		PreventedIssueLooseExperience,
		FailedToLocateAngler,
		FailedInfuseItem,
		LogInfusionPowerLabels,
		LogInfusionPowerOtherLabels,
		CouldntFindItemsInWeaponsList,
		CouldntFindNPCsInIngredientsList,
		FailedFindBossBag,
		FailedFindItemDropsForGroup,
		NPCInProgressionGroupNoUniqueEnchantments,
		NPCInProgressionGroupNotInDropList,
		ItemsFromNPCsNotIncluded,
		ItemsFromNPCIngredientsNotIncluded,
		ItemsFromLootItemsNotIncluded,
		IngredientsFromLootItemsNotincluded,
		WeaponInfusionPowersNotSetup,
		IngredientInfusionPowersNotSetup,
		OreInfusionPowerNotSetup,
		FailedToFindInfusionPower,
		FailedReplaceOldItem,
		RemovedEnchantedItemData,
		FailedConvertExcessExperience,
		PreventedWitchShopDuplication,
		WitchEnchantmentRerolText,
		WitchChatText,
		RerollEnchantment,
		Back,
		WitchSpawnCondition,
		OpenEnchantingTableFirstTime,
	}
	
	public enum WELoadOrder {
		EnchantingTableItems = 1000,
		EnchantingTableTiles = EnchantingTableItems + 1000,
		Essence = EnchantingTableTiles + 1000,
		PowerBoosters = Essence + 1000,
		Containments = PowerBoosters + 1000,
		NPCs = Containments + 1000,
		Enchantments = NPCs + 1000
	}
}
